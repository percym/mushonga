#spring.profiles.include=swagger
#liquibase.contexts=dev
# ===============================
# = APACE ENVIRONMENT CONFIGS
# ===============================
application.test_environment=false
application.member_lookup_url=https://submit.health263.systems:8081/apacewebservices/AMF1_0
application.biometric_url=https://submit.health263.systems:8081/apacewebservices/ABF1_1?wsdl
application.apace_claim_url=https://submit.health263.systems:8081/apacewebservices/ZMF2_2?wsdl

#================================
#= SMS CONFIG
#================================
application.sendSms=true

# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url=jdbc:postgresql://sosi.health263.systems:5433/dova
spring.datasource.url=jdbc:postgresql://localhost:5433/dova?verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.datasource.username=postgres
spring.datasource.password=#LetMeIn
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.jmx.enabled=false
logging.file=dovaLog.log        
# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.default_schema=data
spring.jpa.properties.org.hibernate.envers.default_schema=audit
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Logging
logging.level.root=ERROR
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=debug
debug=true
# ===============================
# = HIKARI
# ===============================
# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

# Without below HikariCP uses deprecated com.zaxxer.hikari.hibernate.HikariConnectionProvider
# Surprisingly enough below ConnectionProvider is in hibernate-hikaricp dependency and not hibernate-core
# So you need to pull that dependency but, make sure to exclude it's transitive dependencies or you will end up
# with different versions of hibernate-core
spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider

## MULTIPART (MultipartProperties)
# Enable multipart uploads


# ===============================
# = private key
# ===============================
#server.port: 8080
#security.require-ssl=true
#server.ssl.key-store:/etc/letsencrypt/live/submit.dova.systems/keystore.p12
#server.ssl.key-store-password: #LetMeIn
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

#================================
#= SMS CONFIG
#================================
application.sendSms=true

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5433/mushonga
spring.datasource.username=postgres2
spring.datasource.password=#LetMeIn
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jmx.enabled=false
#spring.datasource.jndi-name=java:comp/env/jdbc/dova
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jackson.serialization.indent-output=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.default_schema=data
spring.jpa.properties.org.hibernate.envers.default_schema=audit
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=5
#Elasticsearch properties
#spring.data.elasticsearch.cluster-name=
#spring.data.elasticsearch.cluster-nodes=
#spring.data.elasticsearch.properties.path.logs=target/elasticsearch/log
#spring.data.elasticsearch.properties.path.data=target/elasticsearch/data
# Allows Hibernate to generate SQL optimized for a particular DBMS
#Logging
logging.level.root=error
logging.level.org.springframework.web=debug
logging.level.org.hibernate=debug
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.postgresql.util.*=DEBUG
logging.level.org.elasticsearch.bootstrap=DEBUG
debug=true
server.port=8081
# ===============================
# = HIKARI
# ===============================
# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

# Without below HikariCP uses deprecated com.zaxxer.hikari.hibernate.HikariConnectionProvider
# Surprisingly enough below ConnectionProvider is in hibernate-hikaricp dependency and not hibernate-core
# So you need to pull that dependency but, make sure to exclude it's transitive dependencies or you will end up
# with different versions of hibernate-core
spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
spring.main.allow-bean-definition-overriding=true
spring.jackson.date-format=com.fasterxml.jackson.databind.util.StdDateFormat

# ===============================
# = HIBERNATE SEARCH
# ===============================

# Spring Data JPA will take any properties under spring.jpa.properties.* and
# pass them along (with the prefix stripped) once the EntityManagerFactory is
# created.

# Specify the DirectoryProvider to use (the Lucene Directory)
spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
spring.jpa.properties.hibernate.search.default.indexBase = /tmp/SearchaRoo/
